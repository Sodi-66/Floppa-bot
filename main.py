import telebot
import threading
import sqlite3
import callbacks
import commmands
import utils

from utils import update_floppas


tg_token = '6627394164:AAHOSe5nb6ZYM3Tbt2VnvXuEXh5S4-898hs'

bot = telebot.TeleBot(tg_token)


@bot.message_handler(commands=['start'])
def main_start_message(message):
    commmands.start_message(message)


@bot.message_handler(commands=['cmd'])
def main_cmd(message):
    commmands.cmd_help(message)


@bot.message_handler(commands=['buy'])
def buy_floppa(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    username = message.from_user.username

    conn = sqlite3.connect('users-floppa.sql')
    cursor = conn.cursor()

    cursor.execute('SELECT * FROM users WHERE user_id = ?', (user_id,))
    existing_user = cursor.fetchone()

    if existing_user:
        bot.send_message(chat_id, '*–í—ã —É–∂–µ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –®–ª—ë–ø—É!*üò∏\n\n/myfloppa - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –®–ª—ë–ø—ã.',
                         parse_mode='Markdown')
    else:
        bot.send_message(chat_id, '*–í–≤–µ–¥–∏—Ç–µ –∏–º—è* –¥–ª—è –≤–∞—à–µ–≥–æ –ö–∞—Ä–∞–∫–∞–ª–∞üòº:', parse_mode='Markdown')
        bot.register_next_step_handler(message, lambda msg: save_floppa_name(msg, user_id, chat_id, username))

    conn.close()


def save_floppa_name(message, user_id, chat_id, username):
    floppa_name = message.text

    conn = sqlite3.connect('users-floppa.sql')
    cursor = conn.cursor()

    cursor.execute('CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY, user_id INTEGER,  username TEXT,'
                       ' floppa_name TEXT, coin INTEGER, age INTEGER, hunger INTEGER, waste INTEGER, boredom INTEGER,'
                       'sleeping INTEGER DEFAULT 0, wait_interval INTEGER DEFAULT 60)')
    conn.commit()

    cursor.execute(
            'INSERT INTO users (user_id, username, floppa_name, coin, age,  hunger, waste, boredom) VALUES (?, ?, ?, ?, ?, ?, ?, ?)',
            (user_id, username, floppa_name, 0, 0, 100, 100, 100))
    conn.commit()

    conn = sqlite3.connect('users-floppa.sql')
    cursor = conn.cursor()

    cursor.execute(
        'CREATE TABLE IF NOT EXISTS inventory (id INTEGER PRIMARY KEY, user_id INTEGER, item_name TEXT, effect TEXT)')
    conn.commit()

    conn.close()

    bot.send_message(chat_id,
                         f'*–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ–º –®–ª—ë–ø—ã, {username}!*üòº –í–∞—à–µ–≥–æ (–≤–∞—à—É) –®–ª—ë–ø—É –∑–æ–≤—É—Ç {floppa_name}.'
                         f'\n*–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /myfloppa* , —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –®–ª—ë–ø—ã.ü§î\n–í–≤–µ–¥–∏—Ç–µ \cmd ,'
                         f'—á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –∫–æ–º–∞–Ω–¥. üìã', parse_mode='Markdown')

    conn.close()


@bot.message_handler(commands=['createshopdb'])
def main_create_shop(message):
    utils.create_shop_db()


@bot.message_handler(commands=['shop'])
def main_shop(message):
    commmands.shop(message)


@bot.message_handler(commands=['buy_item'])
def main_buy_item(message):
    commmands.buy_item(message)


@bot.message_handler(commands=['use_item'])
def main_use_item(message):
    commmands.use_item(message)


@bot.message_handler(commands=['inventory', 'inv'])
def main_inv(message):
    commmands.inventory(message)


@bot.message_handler(commands=['myfloppa'])
def main_myfloppa(message):
    commmands.my_floppa_info(message)


@bot.message_handler(commands=['feed'])
def main_feed(message):
    commmands.feed_floppa(message)


@bot.message_handler(commands=['clean'])
def main_clean(message):
    commmands.clean_floppa(message)


@bot.message_handler(commands=['play'])
def main_play(message):
    commmands.play_with_floppa(message)


@bot.message_handler(commands=['work'])
def main_work(message):
    commmands.work_floppa(message)


@bot.message_handler(commands=['setage'])
def main_set_age(message):
    commmands.set_age(message)


@bot.message_handler(commands=['sleep'])
def block_cmd(message):
    commmands.sleep_command(message)


@bot.message_handler(commands=['unsleep'])
def unblock_cmd(message):
    commmands.unsleep_command(message)


@bot.message_handler(commands=['caz', 'cas'])
def main_start_casino(message):
    commmands.start_casino(message)


@bot.message_handler(commands=['cuzbas'])
def main_create_cas_base(message):
    commmands.create_cas_base(message)


@bot.callback_query_handler(func=lambda call: True)
def main_inline_buttons(call):
    
    if call.data == 'buy_chips':
        user_id = call.from_user.id
        chat_id = call.message.chat.id

        conn_users = sqlite3.connect('users-floppa.sql')
        cursor_users = conn_users.cursor()

        cursor_users.execute('SELECT * FROM users WHERE user_id = ?', (user_id,))
        existing_user_check = cursor_users.fetchone()

        if existing_user_check[9] == 1:
            bot.send_message(chat_id,
                             '–í–∞—à –®–ª—ë–ø–∞ —Å–ø–∏—Ç!üò¥ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã.\n\n*/unsleep - —Ä–∞–∑–±—É–¥–∏—Ç—å –®–ª—ë–ø—É*',
                             parse_mode='Markdown')
        else:
            if existing_user_check[8] < 20:
                bot.send_message(chat_id, f'*–®–ª—ë–ø–∞ –≤ —Ç–∏–ª—å—Ç–µ!*, –®–ª—ë–ø–∞ –Ω–µ —Ö–æ—á–µ—Ç –∏–¥—Ç–∏ –≤ –∫–∞–∑–∏–Ω–æ —Å–µ–π—á–∞—Å..üòµ‚Äçüí´'
                                          f'\n\n*/play - –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –®–ª—ë–ø—É.*', parse_mode='Markdown')
            else:
                bot.send_message(chat_id, '–í–≤–µ–¥–∏ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –æ–±–º–µ–Ω—è—Ç—å –Ω–∞ —Ñ–∏—à–∫–∏.üé∞\n*1 –∫–æ–∏–Ω = 1 —Ñ–∏—à–∫–∞*',
                                 parse_mode='Markdown')
                bot.register_next_step_handler(call.message, utils.short_callback_buy_chips)

    if call.data == 'sell_chips':
        user_id = call.from_user.id
        chat_id = call.message.chat.id

        conn_users = sqlite3.connect('users-floppa.sql')
        cursor_users = conn_users.cursor()

        cursor_users.execute('SELECT * FROM users WHERE user_id = ?', (user_id,))
        existing_user_check = cursor_users.fetchone()

        if existing_user_check[9] == 1:
            bot.send_message(chat_id,
                             '–í–∞—à –®–ª—ë–ø–∞ —Å–ø–∏—Ç!üò¥ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã.\n\n*/unsleep - —Ä–∞–∑–±—É–¥–∏—Ç—å –®–ª—ë–ø—É*',
                             parse_mode='Markdown')
        else:
            if existing_user_check[8] < 20:
                bot.send_message(chat_id, f'*–®–ª—ë–ø–∞ –≤ —Ç–∏–ª—å—Ç–µ!*, –®–ª—ë–ø–∞ –Ω–µ —Ö–æ—á–µ—Ç –∏–¥—Ç–∏ –≤ –∫–∞–∑–∏–Ω–æ —Å–µ–π—á–∞—Å üòµ‚Äçüí´'
                                          f'\n\n*/play - –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –®–ª—ë–ø—É.*', parse_mode='Markdown')
            else:
                bot.send_message(chat_id, '–í–≤–µ–¥–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∏—à–µ–∫, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ñ–ª–æ–ø–ø–æ-–∫–æ–∏–Ω—ã.üí∞'
                                          '\n*1 –∫–æ–∏–Ω = 1 —Ñ–∏—à–∫–∞*', parse_mode='Markdown')
                bot.register_next_step_handler(call.message, utils.short_callback_sell_chips)

    if call.data == 'red':
        user_id = call.from_user.id
        chat_id = call.message.chat.id

        conn_users = sqlite3.connect('users-floppa.sql')
        cursor_users = conn_users.cursor()

        cursor_users.execute('SELECT * FROM users WHERE user_id = ?', (user_id,))
        existing_user_check = cursor_users.fetchone()

        if existing_user_check[9] == 1:
            bot.send_message(chat_id,
                             '–í–∞—à –®–ª—ë–ø–∞ —Å–ø–∏—Ç!üò¥ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã.\n\n*/unsleep - —Ä–∞–∑–±—É–¥–∏—Ç—å –®–ª—ë–ø—É*',
                             parse_mode='Markdown')
        else:
            if existing_user_check[8] < 20:
                bot.send_message(chat_id, f'*–®–ª—ë–ø–∞ –≤ —Ç–∏–ª—å—Ç–µ!*, –®–ª—ë–ø–∞ –Ω–µ —Ö–æ—á–µ—Ç –∏–≥—Ä–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ —Å–µ–π—á–∞—Å..üò©'
                                          f'\n\n*/play - –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –®–ª—ë–ø—É.*', parse_mode='Markdown')
            else:
                bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É üÉè')
                bot.register_next_step_handler(call.message, utils.red_casino)

    if call.data == 'black':
        user_id = call.from_user.id
        chat_id = call.message.chat.id

        conn_users = sqlite3.connect('users-floppa.sql')
        cursor_users = conn_users.cursor()

        cursor_users.execute('SELECT * FROM users WHERE user_id = ?', (user_id,))
        existing_user_check = cursor_users.fetchone()

        if existing_user_check[9] == 1:
            bot.send_message(chat_id,
                             '–í–∞—à –®–ª—ë–ø–∞ —Å–ø–∏—Ç!üò¥ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã.\n\n*/unsleep - —Ä–∞–∑–±—É–¥–∏—Ç—å –®–ª—ë–ø—É*',
                             parse_mode='Markdown')
        else:
            if existing_user_check[8] < 20:
                bot.send_message(chat_id, f'*–®–ª—ë–ø–∞ –≤ —Ç–∏–ª—å—Ç–µ!*, –®–ª—ë–ø–∞ –Ω–µ —Ö–æ—á–µ—Ç –∏–≥—Ä–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ —Å–µ–π—á–∞—Å..üò©'
                                          f'\n\n*/play - –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –®–ª—ë–ø—É.*', parse_mode='Markdown')
            else:
                bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É üÉè')
                bot.register_next_step_handler(call.message, utils.black_casino)

    if call.data == 'zero':
        user_id = call.from_user.id
        chat_id = call.message.chat.id

        conn_users = sqlite3.connect('users-floppa.sql')
        cursor_users = conn_users.cursor()

        cursor_users.execute('SELECT * FROM users WHERE user_id = ?', (user_id,))
        existing_user_check = cursor_users.fetchone()

        if existing_user_check[9] == 1:
            bot.send_message(chat_id,
                             '–í–∞—à –®–ª—ë–ø–∞ —Å–ø–∏—Ç!üò¥ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã.\n\n*/unsleep - —Ä–∞–∑–±—É–¥–∏—Ç—å –®–ª—ë–ø—É*',
                             parse_mode='Markdown')
        else:
            if existing_user_check[8] < 20:
                bot.send_message(chat_id, f'*–®–ª—ë–ø–∞ –≤ —Ç–∏–ª—å—Ç–µ!*, –®–ª—ë–ø–∞ –Ω–µ —Ö–æ—á–µ—Ç –∏–≥—Ä–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ —Å–µ–π—á–∞—Å..üò©'
                                          f'\n\n*/play - –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –®–ª—ë–ø—É.*', parse_mode='Markdown')
            else:
                bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É üÉè')
                bot.register_next_step_handler(call.message, utils.zero_casino)

    if call.data == 'even':
        user_id = call.from_user.id
        chat_id = call.message.chat.id

        conn_users = sqlite3.connect('users-floppa.sql')
        cursor_users = conn_users.cursor()

        cursor_users.execute('SELECT * FROM users WHERE user_id = ?', (user_id,))
        existing_user_check = cursor_users.fetchone()

        if existing_user_check[9] == 1:
            bot.send_message(chat_id,
                             '–í–∞—à –®–ª—ë–ø–∞ —Å–ø–∏—Ç!üò¥ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã.\n\n*/unsleep - —Ä–∞–∑–±—É–¥–∏—Ç—å –®–ª—ë–ø—É*',
                             parse_mode='Markdown')
        else:
            if existing_user_check[8] < 20:
                bot.send_message(chat_id, f'*–®–ª—ë–ø–∞ –≤ —Ç–∏–ª—å—Ç–µ!*, –®–ª—ë–ø–∞ –Ω–µ —Ö–æ—á–µ—Ç –∏–≥—Ä–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ —Å–µ–π—á–∞—Å..üò©'
                                          f'\n\n*/play - –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –®–ª—ë–ø—É.*', parse_mode='Markdown')
            else:
                bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É üÉè')
                bot.register_next_step_handler(call.message, utils.even_casino)

    if call.data == 'odd':
        user_id = call.from_user.id
        chat_id = call.message.chat.id

        conn_users = sqlite3.connect('users-floppa.sql')
        cursor_users = conn_users.cursor()

        cursor_users.execute('SELECT * FROM users WHERE user_id = ?', (user_id,))
        existing_user_check = cursor_users.fetchone()

        if existing_user_check[9] == 1:
            bot.send_message(chat_id,
                             '–í–∞—à –®–ª—ë–ø–∞ —Å–ø–∏—Ç!üò¥ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã.\n\n*/unsleep - —Ä–∞–∑–±—É–¥–∏—Ç—å –®–ª—ë–ø—É*',
                             parse_mode='Markdown')
        else:
            if existing_user_check[8] < 20:
                bot.send_message(chat_id, f'*–®–ª—ë–ø–∞ –≤ —Ç–∏–ª—å—Ç–µ!*, –®–ª—ë–ø–∞ –Ω–µ —Ö–æ—á–µ—Ç –∏–≥—Ä–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ —Å–µ–π—á–∞—Å..üò©'
                                          f'\n\n*/play - –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –®–ª—ë–ø—É.*', parse_mode='Markdown')
            else:
                bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É üÉè')
                bot.register_next_step_handler(call.message, utils.odd_casino)

    if call.data == 'st':
        user_id = call.from_user.id
        chat_id = call.message.chat.id

        conn_users = sqlite3.connect('users-floppa.sql')
        cursor_users = conn_users.cursor()

        cursor_users.execute('SELECT * FROM users WHERE user_id = ?', (user_id,))
        existing_user_check = cursor_users.fetchone()

        if existing_user_check[9] == 1:
            bot.send_message(chat_id,
                             '–í–∞—à –®–ª—ë–ø–∞ —Å–ø–∏—Ç!üò¥ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã.\n\n*/unsleep - —Ä–∞–∑–±—É–¥–∏—Ç—å –®–ª—ë–ø—É*',
                             parse_mode='Markdown')
        else:
            if existing_user_check[8] < 20:
                bot.send_message(chat_id, f'*–®–ª—ë–ø–∞ –≤ —Ç–∏–ª—å—Ç–µ!*, –®–ª—ë–ø–∞ –Ω–µ —Ö–æ—á–µ—Ç –∏–≥—Ä–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ —Å–µ–π—á–∞—Å..üò©'
                                          f'\n\n*/play - –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –®–ª—ë–ø—É.*', parse_mode='Markdown')
            else:
                bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É üÉè')
                bot.register_next_step_handler(call.message, utils.st_casino)

    if call.data == 'nd':
        user_id = call.from_user.id
        chat_id = call.message.chat.id

        conn_users = sqlite3.connect('users-floppa.sql')
        cursor_users = conn_users.cursor()

        cursor_users.execute('SELECT * FROM users WHERE user_id = ?', (user_id,))
        existing_user_check = cursor_users.fetchone()

        if existing_user_check[9] == 1:
            bot.send_message(chat_id,
                             '–í–∞—à –®–ª—ë–ø–∞ —Å–ø–∏—Ç!üò¥ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã.\n\n*/unsleep - —Ä–∞–∑–±—É–¥–∏—Ç—å –®–ª—ë–ø—É*',
                             parse_mode='Markdown')
        else:
            if existing_user_check[8] < 20:
                bot.send_message(chat_id, f'*–®–ª—ë–ø–∞ –≤ —Ç–∏–ª—å—Ç–µ!*, –®–ª—ë–ø–∞ –Ω–µ —Ö–æ—á–µ—Ç –∏–≥—Ä–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ —Å–µ–π—á–∞—Å..üò©'
                                          f'\n\n*/play - –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –®–ª—ë–ø—É.*', parse_mode='Markdown')
            else:
                bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É üÉè')
                bot.register_next_step_handler(call.message, utils.nd_casino)

    if call.data == 'rd':
        user_id = call.from_user.id
        chat_id = call.message.chat.id

        conn_users = sqlite3.connect('users-floppa.sql')
        cursor_users = conn_users.cursor()

        cursor_users.execute('SELECT * FROM users WHERE user_id = ?', (user_id,))
        existing_user_check = cursor_users.fetchone()

        if existing_user_check[9] == 1:
            bot.send_message(chat_id,
                             '–í–∞—à –®–ª—ë–ø–∞ —Å–ø–∏—Ç!üò¥ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã.\n\n*/unsleep - —Ä–∞–∑–±—É–¥–∏—Ç—å –®–ª—ë–ø—É*',
                             parse_mode='Markdown')
        else:
            if existing_user_check[8] < 20:
                bot.send_message(chat_id, f'*–®–ª—ë–ø–∞ –≤ —Ç–∏–ª—å—Ç–µ!*, –®–ª—ë–ø–∞ –Ω–µ —Ö–æ—á–µ—Ç –∏–≥—Ä–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ —Å–µ–π—á–∞—Å..üò©'
                                          f'\n\n*/play - –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –®–ª—ë–ø—É.*', parse_mode='Markdown')
            else:
                bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É üÉè')
                bot.register_next_step_handler(call.message, utils.rd_casino)

    if call.data == '34':
        user_id = call.from_user.id
        chat_id = call.message.chat.id

        conn_users = sqlite3.connect('users-floppa.sql')
        cursor_users = conn_users.cursor()

        cursor_users.execute('SELECT * FROM users WHERE user_id = ?', (user_id,))
        existing_user_check = cursor_users.fetchone()

        if existing_user_check[9] == 1:
            bot.send_message(chat_id,
                             '–í–∞—à –®–ª—ë–ø–∞ —Å–ø–∏—Ç!üò¥ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã.\n\n*/unsleep - —Ä–∞–∑–±—É–¥–∏—Ç—å –®–ª—ë–ø—É*',
                             parse_mode='Markdown')
        else:
            if existing_user_check[8] < 20:
                bot.send_message(chat_id, f'*–®–ª—ë–ø–∞ –≤ —Ç–∏–ª—å—Ç–µ!*, –®–ª—ë–ø–∞ –Ω–µ —Ö–æ—á–µ—Ç –∏–≥—Ä–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ —Å–µ–π—á–∞—Å..üò©'
                                          f'\n\n*/play - –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –®–ª—ë–ø—É.*', parse_mode='Markdown')
            else:
                bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É üÉè')
                bot.register_next_step_handler(call.message, utils._1_34)

    if call.data == '35':
        user_id = call.from_user.id
        chat_id = call.message.chat.id

        conn_users = sqlite3.connect('users-floppa.sql')
        cursor_users = conn_users.cursor()

        cursor_users.execute('SELECT * FROM users WHERE user_id = ?', (user_id,))
        existing_user_check = cursor_users.fetchone()

        if existing_user_check[9] == 1:
            bot.send_message(chat_id,
                             '–í–∞—à –®–ª—ë–ø–∞ —Å–ø–∏—Ç!üò¥ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã.\n\n*/unsleep - —Ä–∞–∑–±—É–¥–∏—Ç—å –®–ª—ë–ø—É*',
                             parse_mode='Markdown')
        else:
            if existing_user_check[8] < 20:
                bot.send_message(chat_id, f'*–®–ª—ë–ø–∞ –≤ —Ç–∏–ª—å—Ç–µ!*, –®–ª—ë–ø–∞ –Ω–µ —Ö–æ—á–µ—Ç –∏–≥—Ä–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ —Å–µ–π—á–∞—Å..üò©'
                                          f'\n\n*/play - –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –®–ª—ë–ø—É.*', parse_mode='Markdown')
            else:
                bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É üÉè')
                bot.register_next_step_handler(call.message, utils._2_35)

    if call.data == '36':
        user_id = call.from_user.id
        chat_id = call.message.chat.id

        conn_users = sqlite3.connect('users-floppa.sql')
        cursor_users = conn_users.cursor()

        cursor_users.execute('SELECT * FROM users WHERE user_id = ?', (user_id,))
        existing_user_check = cursor_users.fetchone()

        if existing_user_check[9] == 1:
            bot.send_message(chat_id,
                             '–í–∞—à –®–ª—ë–ø–∞ —Å–ø–∏—Ç!üò¥ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã.\n\n*/unsleep - —Ä–∞–∑–±—É–¥–∏—Ç—å –®–ª—ë–ø—É*',
                             parse_mode='Markdown')
        else:
            if existing_user_check[8] < 20:
                bot.send_message(chat_id, f'*–®–ª—ë–ø–∞ –≤ —Ç–∏–ª—å—Ç–µ!*, –®–ª—ë–ø–∞ –Ω–µ —Ö–æ—á–µ—Ç –∏–≥—Ä–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ —Å–µ–π—á–∞—Å..üò©'
                                          f'\n\n*/play - –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –®–ª—ë–ø—É.*', parse_mode='Markdown')
            else:
                bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É üÉè')
                bot.register_next_step_handler(call.message, utils._3_36)

    if call.data == '1-18':
        user_id = call.from_user.id
        chat_id = call.message.chat.id

        conn_users = sqlite3.connect('users-floppa.sql')
        cursor_users = conn_users.cursor()

        cursor_users.execute('SELECT * FROM users WHERE user_id = ?', (user_id,))
        existing_user_check = cursor_users.fetchone()

        if existing_user_check[9] == 1:
            bot.send_message(chat_id,
                             '–í–∞—à –®–ª—ë–ø–∞ —Å–ø–∏—Ç!üò¥ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã.\n\n*/unsleep - —Ä–∞–∑–±—É–¥–∏—Ç—å –®–ª—ë–ø—É*',
                             parse_mode='Markdown')
        else:
            if existing_user_check[8] < 20:
                bot.send_message(chat_id, f'*–®–ª—ë–ø–∞ –≤ —Ç–∏–ª—å—Ç–µ!*, –®–ª—ë–ø–∞ –Ω–µ —Ö–æ—á–µ—Ç –∏–≥—Ä–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ —Å–µ–π—á–∞—Å..üò©'
                                          f'\n\n*/play - –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –®–ª—ë–ø—É.*', parse_mode='Markdown')
            else:
                bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É üÉè')
                bot.register_next_step_handler(call.message, utils._1_18)

    if call.data == '19-36':
        user_id = call.from_user.id
        chat_id = call.message.chat.id

        conn_users = sqlite3.connect('users-floppa.sql')
        cursor_users = conn_users.cursor()

        cursor_users.execute('SELECT * FROM users WHERE user_id = ?', (user_id,))
        existing_user_check = cursor_users.fetchone()

        if existing_user_check[9] == 1:
            bot.send_message(chat_id,
                             '–í–∞—à –®–ª—ë–ø–∞ —Å–ø–∏—Ç!üò¥ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã.\n\n*/unsleep - —Ä–∞–∑–±—É–¥–∏—Ç—å –®–ª—ë–ø—É*',
                             parse_mode='Markdown')
        else:
            if existing_user_check[8] < 20:
                bot.send_message(chat_id, f'*–®–ª—ë–ø–∞ –≤ —Ç–∏–ª—å—Ç–µ!*, –®–ª—ë–ø–∞ –Ω–µ —Ö–æ—á–µ—Ç –∏–≥—Ä–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ —Å–µ–π—á–∞—Å..üò©'
                                          f'\n\n*/play - –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –®–ª—ë–ø—É.*', parse_mode='Markdown')
            else:
                bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É üÉè')
                bot.register_next_step_handler(call.message, utils._19_36)

    callbacks.handle_inline_buttons(call)


update_thread = threading.Thread(target=update_floppas)
update_thread.start()

bot.polling(none_stop=True)
